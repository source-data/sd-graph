# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PublisherDescription(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, n_papers: int=None):  # noqa: E501
        """PublisherDescription - a model defined in Swagger

        :param id: The id of this PublisherDescription.  # noqa: E501
        :type id: str
        :param n_papers: The n_papers of this PublisherDescription.  # noqa: E501
        :type n_papers: int
        """
        self.swagger_types = {
            'id': str,
            'n_papers': int
        }

        self.attribute_map = {
            'id': 'id',
            'n_papers': 'n_papers'
        }
        self._id = id
        self._n_papers = n_papers

    @classmethod
    def from_dict(cls, dikt) -> 'PublisherDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PublisherDescription of this PublisherDescription.  # noqa: E501
        :rtype: PublisherDescription
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this PublisherDescription.

        The ID of the publisher.  # noqa: E501

        :return: The id of this PublisherDescription.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this PublisherDescription.

        The ID of the publisher.  # noqa: E501

        :param id: The id of this PublisherDescription.
        :type id: str
        """

        self._id = id

    @property
    def n_papers(self) -> int:
        """Gets the n_papers of this PublisherDescription.

        The number of refereed preprints published by the publisher.  # noqa: E501

        :return: The n_papers of this PublisherDescription.
        :rtype: int
        """
        return self._n_papers

    @n_papers.setter
    def n_papers(self, n_papers: int):
        """Sets the n_papers of this PublisherDescription.

        The number of refereed preprints published by the publisher.  # noqa: E501

        :param n_papers: The n_papers of this PublisherDescription.
        :type n_papers: int
        """

        self._n_papers = n_papers
