# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ReviewingServiceDescription(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, peer_review_policy: str=None, name: str=None, competing_interests: str=None, opportunity_for_author_response: str=None, reviewer_selected_by: str=None, recommendation: str=None, public_interaction: str=None, review_coverage: str=None, review_requested_by: str=None, url: str=None, reviewer_identity_known_to: str=None):  # noqa: E501
        """ReviewingServiceDescription - a model defined in Swagger

        :param peer_review_policy: The peer_review_policy of this ReviewingServiceDescription.  # noqa: E501
        :type peer_review_policy: str
        :param name: The name of this ReviewingServiceDescription.  # noqa: E501
        :type name: str
        :param competing_interests: The competing_interests of this ReviewingServiceDescription.  # noqa: E501
        :type competing_interests: str
        :param opportunity_for_author_response: The opportunity_for_author_response of this ReviewingServiceDescription.  # noqa: E501
        :type opportunity_for_author_response: str
        :param reviewer_selected_by: The reviewer_selected_by of this ReviewingServiceDescription.  # noqa: E501
        :type reviewer_selected_by: str
        :param recommendation: The recommendation of this ReviewingServiceDescription.  # noqa: E501
        :type recommendation: str
        :param public_interaction: The public_interaction of this ReviewingServiceDescription.  # noqa: E501
        :type public_interaction: str
        :param review_coverage: The review_coverage of this ReviewingServiceDescription.  # noqa: E501
        :type review_coverage: str
        :param review_requested_by: The review_requested_by of this ReviewingServiceDescription.  # noqa: E501
        :type review_requested_by: str
        :param url: The url of this ReviewingServiceDescription.  # noqa: E501
        :type url: str
        :param reviewer_identity_known_to: The reviewer_identity_known_to of this ReviewingServiceDescription.  # noqa: E501
        :type reviewer_identity_known_to: str
        """
        self.swagger_types = {
            'peer_review_policy': str,
            'name': str,
            'competing_interests': str,
            'opportunity_for_author_response': str,
            'reviewer_selected_by': str,
            'recommendation': str,
            'public_interaction': str,
            'review_coverage': str,
            'review_requested_by': str,
            'url': str,
            'reviewer_identity_known_to': str
        }

        self.attribute_map = {
            'peer_review_policy': 'peer_review_policy',
            'name': 'name',
            'competing_interests': 'competing_interests',
            'opportunity_for_author_response': 'opportunity_for_author_response',
            'reviewer_selected_by': 'reviewer_selected_by',
            'recommendation': 'recommendation',
            'public_interaction': 'public_interaction',
            'review_coverage': 'review_coverage',
            'review_requested_by': 'review_requested_by',
            'url': 'url',
            'reviewer_identity_known_to': 'reviewer_identity_known_to'
        }
        self._peer_review_policy = peer_review_policy
        self._name = name
        self._competing_interests = competing_interests
        self._opportunity_for_author_response = opportunity_for_author_response
        self._reviewer_selected_by = reviewer_selected_by
        self._recommendation = recommendation
        self._public_interaction = public_interaction
        self._review_coverage = review_coverage
        self._review_requested_by = review_requested_by
        self._url = url
        self._reviewer_identity_known_to = reviewer_identity_known_to

    @classmethod
    def from_dict(cls, dikt) -> 'ReviewingServiceDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ReviewingServiceDescription of this ReviewingServiceDescription.  # noqa: E501
        :rtype: ReviewingServiceDescription
        """
        return util.deserialize_model(dikt, cls)

    @property
    def peer_review_policy(self) -> str:
        """Gets the peer_review_policy of this ReviewingServiceDescription.


        :return: The peer_review_policy of this ReviewingServiceDescription.
        :rtype: str
        """
        return self._peer_review_policy

    @peer_review_policy.setter
    def peer_review_policy(self, peer_review_policy: str):
        """Sets the peer_review_policy of this ReviewingServiceDescription.


        :param peer_review_policy: The peer_review_policy of this ReviewingServiceDescription.
        :type peer_review_policy: str
        """

        self._peer_review_policy = peer_review_policy

    @property
    def name(self) -> str:
        """Gets the name of this ReviewingServiceDescription.


        :return: The name of this ReviewingServiceDescription.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ReviewingServiceDescription.


        :param name: The name of this ReviewingServiceDescription.
        :type name: str
        """

        self._name = name

    @property
    def competing_interests(self) -> str:
        """Gets the competing_interests of this ReviewingServiceDescription.


        :return: The competing_interests of this ReviewingServiceDescription.
        :rtype: str
        """
        return self._competing_interests

    @competing_interests.setter
    def competing_interests(self, competing_interests: str):
        """Sets the competing_interests of this ReviewingServiceDescription.


        :param competing_interests: The competing_interests of this ReviewingServiceDescription.
        :type competing_interests: str
        """

        self._competing_interests = competing_interests

    @property
    def opportunity_for_author_response(self) -> str:
        """Gets the opportunity_for_author_response of this ReviewingServiceDescription.


        :return: The opportunity_for_author_response of this ReviewingServiceDescription.
        :rtype: str
        """
        return self._opportunity_for_author_response

    @opportunity_for_author_response.setter
    def opportunity_for_author_response(self, opportunity_for_author_response: str):
        """Sets the opportunity_for_author_response of this ReviewingServiceDescription.


        :param opportunity_for_author_response: The opportunity_for_author_response of this ReviewingServiceDescription.
        :type opportunity_for_author_response: str
        """

        self._opportunity_for_author_response = opportunity_for_author_response

    @property
    def reviewer_selected_by(self) -> str:
        """Gets the reviewer_selected_by of this ReviewingServiceDescription.


        :return: The reviewer_selected_by of this ReviewingServiceDescription.
        :rtype: str
        """
        return self._reviewer_selected_by

    @reviewer_selected_by.setter
    def reviewer_selected_by(self, reviewer_selected_by: str):
        """Sets the reviewer_selected_by of this ReviewingServiceDescription.


        :param reviewer_selected_by: The reviewer_selected_by of this ReviewingServiceDescription.
        :type reviewer_selected_by: str
        """

        self._reviewer_selected_by = reviewer_selected_by

    @property
    def recommendation(self) -> str:
        """Gets the recommendation of this ReviewingServiceDescription.


        :return: The recommendation of this ReviewingServiceDescription.
        :rtype: str
        """
        return self._recommendation

    @recommendation.setter
    def recommendation(self, recommendation: str):
        """Sets the recommendation of this ReviewingServiceDescription.


        :param recommendation: The recommendation of this ReviewingServiceDescription.
        :type recommendation: str
        """

        self._recommendation = recommendation

    @property
    def public_interaction(self) -> str:
        """Gets the public_interaction of this ReviewingServiceDescription.


        :return: The public_interaction of this ReviewingServiceDescription.
        :rtype: str
        """
        return self._public_interaction

    @public_interaction.setter
    def public_interaction(self, public_interaction: str):
        """Sets the public_interaction of this ReviewingServiceDescription.


        :param public_interaction: The public_interaction of this ReviewingServiceDescription.
        :type public_interaction: str
        """

        self._public_interaction = public_interaction

    @property
    def review_coverage(self) -> str:
        """Gets the review_coverage of this ReviewingServiceDescription.


        :return: The review_coverage of this ReviewingServiceDescription.
        :rtype: str
        """
        return self._review_coverage

    @review_coverage.setter
    def review_coverage(self, review_coverage: str):
        """Sets the review_coverage of this ReviewingServiceDescription.


        :param review_coverage: The review_coverage of this ReviewingServiceDescription.
        :type review_coverage: str
        """

        self._review_coverage = review_coverage

    @property
    def review_requested_by(self) -> str:
        """Gets the review_requested_by of this ReviewingServiceDescription.


        :return: The review_requested_by of this ReviewingServiceDescription.
        :rtype: str
        """
        return self._review_requested_by

    @review_requested_by.setter
    def review_requested_by(self, review_requested_by: str):
        """Sets the review_requested_by of this ReviewingServiceDescription.


        :param review_requested_by: The review_requested_by of this ReviewingServiceDescription.
        :type review_requested_by: str
        """

        self._review_requested_by = review_requested_by

    @property
    def url(self) -> str:
        """Gets the url of this ReviewingServiceDescription.


        :return: The url of this ReviewingServiceDescription.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this ReviewingServiceDescription.


        :param url: The url of this ReviewingServiceDescription.
        :type url: str
        """

        self._url = url

    @property
    def reviewer_identity_known_to(self) -> str:
        """Gets the reviewer_identity_known_to of this ReviewingServiceDescription.


        :return: The reviewer_identity_known_to of this ReviewingServiceDescription.
        :rtype: str
        """
        return self._reviewer_identity_known_to

    @reviewer_identity_known_to.setter
    def reviewer_identity_known_to(self, reviewer_identity_known_to: str):
        """Sets the reviewer_identity_known_to of this ReviewingServiceDescription.


        :param reviewer_identity_known_to: The reviewer_identity_known_to of this ReviewingServiceDescription.
        :type reviewer_identity_known_to: str
        """

        self._reviewer_identity_known_to = reviewer_identity_known_to
