/*
 * Early Evidence Base API
 * Read-only API for the Early Evidence Base platform providing collections of papers by reviewing service, automagic, and auto topics, as well as details on papers by DOI.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.51
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {InlineResponse200} from '../model/InlineResponse200';

/**
* PaperDetails service.
* @module api/PaperDetailsApi
* @version 2.0.0
*/
export class PaperDetailsApi {

    /**
    * Constructs a new PaperDetailsApi. 
    * @alias module:api/PaperDetailsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the papersGet operation.
     * @callback moduleapi/PaperDetailsApi~papersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get paginated collections of papers, optionally filtered by reviewing service
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.reviewedBy The IDs of the reviewing services for which papers are requested.
     * @param {String} opts.query A search string to filter the results by.
     * @param {Number} opts.page The page number of the results to retrieve. The first page is 1. (default to <.>)
     * @param {Number} opts.perPage The number of results to return per page. (default to <.>)
     * @param {module:model/String} opts.sortBy The field to sort the results by. (default to <.>)
     * @param {module:model/String} opts.sortOrder The direction to sort the results in. (default to <.>)
     * @param {module:api/PaperDetailsApi~papersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    papersGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'reviewed-by': this.apiClient.buildCollectionParam(opts['reviewedBy'], 'multi'),'query': opts['query'],'page': opts['page'],'per-page': opts['perPage'],'sort-by': opts['sortBy'],'sort-order': opts['sortOrder']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/papers/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}