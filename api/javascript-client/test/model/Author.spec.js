/*
 * Early Evidence Base API
 * Read-only API for the Early Evidence Base platform providing collections of papers by reviewing service, automagic, and auto topics, as well as details on papers by DOI.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.51
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EarlyEvidenceBaseApi);
  }
}(this, function(expect, EarlyEvidenceBaseApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Author', function() {
      beforeEach(function() {
        instance = new EarlyEvidenceBaseApi.Author();
      });

      it('should create an instance of Author', function() {
        // TODO: update the code to test Author
        expect(instance).to.be.a(EarlyEvidenceBaseApi.Author);
      });

      it('should have the property surname (base name: "surname")', function() {
        // TODO: update the code to test the property surname
        expect(instance).to.have.property('surname');
        // expect(instance.surname).to.be(expectedValueLiteral);
      });

      it('should have the property corresp (base name: "corresp")', function() {
        // TODO: update the code to test the property corresp
        expect(instance).to.have.property('corresp');
        // expect(instance.corresp).to.be(expectedValueLiteral);
      });

      it('should have the property orcid (base name: "orcid")', function() {
        // TODO: update the code to test the property orcid
        expect(instance).to.have.property('orcid');
        // expect(instance.orcid).to.be(expectedValueLiteral);
      });

      it('should have the property positionIdx (base name: "position_idx")', function() {
        // TODO: update the code to test the property positionIdx
        expect(instance).to.have.property('positionIdx');
        // expect(instance.positionIdx).to.be(expectedValueLiteral);
      });

      it('should have the property givenNames (base name: "given_names")', function() {
        // TODO: update the code to test the property givenNames
        expect(instance).to.have.property('givenNames');
        // expect(instance.givenNames).to.be(expectedValueLiteral);
      });

    });
  });

}));
