version: '3'

services:
  flask:
    image: ghcr.io/source-data/sd-graph_deploy_flask:${IMAGE_TAG}
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/.venv  # use virtual environment from the image
      - /app/src  # use git-based modules installed in the image
      - ./log:/log
      - ${BIORXIV_PATH}:/app/biorxiv # to be provided in .env
      - ${MECADOI_PATH}:/app/mecadoi
    env_file:
      - ./.env
    shm_size: '16gb'
    command: /runserver
    working_dir: /app

  neo4j:
    image: neo4j:4.4
    environment:
      - NEO4JLABS_PLUGINS=["apoc", "graph-data-science"]
    ulimits:
      nofile:
        soft: 40000
        hard: 40000
    volumes:
      - ./data/neo4j-data:/data
      - ./data/neo4j-logs:/logs
      - ./data/neo4j-plugins:/plugins
    env_file:
      - ./.env
    deploy:
      resources:
        limits:
          memory: ${NEO4J_MEMORY_LIMIT:-4G}
    healthcheck:
      test: cypher-shell -u ${NEO_USERNAME} -p ${NEO_PASSWORD} --non-interactive "MATCH (n) RETURN ID(n) LIMIT 1"
      # wait up to 10 minutes for neo4j to be ready
      interval: 10s
      timeout: 10s
      retries: 60

  redis:
    image: redis:6
    healthcheck:
      test: redis-cli --raw incr ping
    volumes:
      - ./data/redis-data:/data
