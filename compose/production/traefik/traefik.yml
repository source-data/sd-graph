log:
  level: INFO

entryPoints:
  web:
    address: ":80"
    # forwardedHeaders: # necessary to trust X-Forwarded-For headers generated by Nginx
    #   trustedIPs:
    #     # - "127.0.0.1/32"
    #     # - "172.21.1.14"
    #     - "172.22.0.1" # ip address generated by the docker network, i could find a way of trusting the real host IP
    #                    # this has the side effect of allowing attackers to forge X-Forward-* headers like this:
    #                    #    curl --header "X-Forwarded-For: 192.168.0.2" https://accounts-dev.embo.org/admin
    #                    # However, in the particular case of X-Forwarded-For, NGINX can be configured in production
    #                    # to overwrite it with the real IP.
    #                    # With this trick, ip-whitelisting by traefik seems reliable and secure, but i'm not sure
    #                    # if this opened other kind of attacks
  web-secure:
    # https
    address: ":443"

certificatesResolvers:
  letsencrypt:
    # https://docs.traefik.io/master/https/acme/#lets-encrypt
    acme:
      email: "embo_it@embo.org"
      storage: /etc/traefik/acme/acme.json
      # https://docs.traefik.io/master/https/acme/#httpchallenge
      httpChallenge:
        entryPoint: web

http:
  routers:
    # web-admin:
    #   rule: "PathPrefix(`/admin`)"
    #   priority: 2
    #   entryPoints:
    #     - web
    #   middlewares:
    #     - embo-intranet-ipwhitelist
    #     - csrf
    #   service: django

          #api-router:
          #  # rule: "Host(`0.0.0.0`)"
          #  # rule: "PathPrefix(`/api`)"
          #  rule: "( Host(`0.0.0.0`) || Host(`ec2-3-125-193-124.eu-central-1.compute.amazonaws.com`) || Host(`covid19.sourcedata.io`) )  && PathPrefix(`/api`)"
          #  # priority: 1
          #  entryPoints:
          #    - web
          #  middlewares:
          #    # - redirect
          #    - csrf
          #  service: flask

    vuejs-router:
      rule: "Host(`0.0.0.0`) || Host(`eeb.embo.org`) || Host(`eeb-dev.embo.org`) "
      # priority: 1
      entryPoints:
        - web
      middlewares:
        - redirect
        # - csrf
      service: vuejs

    web-secure-vuejs-router:
      rule: "Host(`eeb.embo.org`) || Host(`eeb-dev.embo.org`) "
      entryPoints:
        - web-secure
      middlewares:
        - csrf
        - test-compress
      service: vuejs
      tls:
        # https://docs.traefik.io/master/routing/routers/#certresolver
        certResolver: letsencrypt
    web-secure-api-router:
      rule: "( Host(`eeb.embo.org`) || Host(`eeb-dev.embo.org`)  )  && (PathPrefix(`/api`) || PathPrefix(`/sitemap.xml`))"
      entryPoints:
        - web-secure
      middlewares:
        - csrf
        - test-compress
      service: flask
      tls:
        # https://docs.traefik.io/master/routing/routers/#certresolver
        certResolver: letsencrypt


  middlewares:
    redirect:
      # https://docs.traefik.io/master/middlewares/redirectscheme/
      redirectScheme:
        scheme: https
        permanent: true
    csrf:
      # https://docs.traefik.io/master/middlewares/headers/#hostsproxyheaders
      # https://docs.djangoproject.com/en/dev/ref/csrf/#ajax
      headers:
        hostsProxyHeaders: ['X-CSRFToken']
    test-compress:
      compress: {}
    # embo-intranet-ipwhitelist:
    #   ipWhiteList:
    #     sourceRange:
    #       # - "0.0.0.0/0" # enable this if you want to test "production" on  you local machine
    #       - "172.21.0.0/16"
    #     ipStrategy:
    #       depth: 1
    #     # ipStrategy:
    #     #   excludedIPs:
    #     #     - "192.168.0.101"

  services:
    flask:
      loadBalancer:
        servers:
          - url: http://flask:5000
    vuejs:
      loadBalancer:
        servers:
          - url: http://vuejs

providers:
  # https://docs.traefik.io/master/providers/file/
  file:
    filename: /etc/traefik/traefik.yml
    watch: true
#api:
#  insecure: true # for web UI debugging
#  debug: true
#log:
#  level: DEBUG
